ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Interrupt_Routines.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ISR_LIS3DH_FIFO_WATERMARK,"ax",%progbits
  20              		.align	2
  21              		.global	ISR_LIS3DH_FIFO_WATERMARK
  22              		.thumb
  23              		.thumb_func
  24              		.type	ISR_LIS3DH_FIFO_WATERMARK, %function
  25              	ISR_LIS3DH_FIFO_WATERMARK:
  26              	.LFB64:
  27              		.file 1 "Interrupt_Routines.c"
   1:Interrupt_Routines.c **** /* ========================================
   2:Interrupt_Routines.c ****  *
   3:Interrupt_Routines.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:Interrupt_Routines.c ****  * All Rights Reserved
   5:Interrupt_Routines.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:Interrupt_Routines.c ****  *
   7:Interrupt_Routines.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:Interrupt_Routines.c ****  * WHICH IS THE PROPERTY OF your company.
   9:Interrupt_Routines.c ****  *
  10:Interrupt_Routines.c ****  * ========================================
  11:Interrupt_Routines.c **** */
  12:Interrupt_Routines.c **** 
  13:Interrupt_Routines.c **** /*********************   INTERRUPT ROUTINES FILE   *************************/
  14:Interrupt_Routines.c **** 
  15:Interrupt_Routines.c **** /* Inclusion of Header files */
  16:Interrupt_Routines.c **** #include "project.h"
  17:Interrupt_Routines.c **** #include "Interrupt_Routines.h"
  18:Interrupt_Routines.c **** #include "stdio.h"
  19:Interrupt_Routines.c **** #include "ErrorCodes.h"
  20:Interrupt_Routines.c **** #include "I2C_Interface.h"
  21:Interrupt_Routines.c **** #include "LIS3DH_Registers.h"
  22:Interrupt_Routines.c **** #include "LIS3DH_Registers_Settings.h"
  23:Interrupt_Routines.c **** 
  24:Interrupt_Routines.c **** /***************** VARIABLES' INITIALIZATION *************/
  25:Interrupt_Routines.c **** 
  26:Interrupt_Routines.c **** ErrorCode error;
  27:Interrupt_Routines.c **** uint8_t watermark;
  28:Interrupt_Routines.c **** uint8_t int1_src_reg;
  29:Interrupt_Routines.c **** uint8_t prev_state=0;
  30:Interrupt_Routines.c **** volatile uint16_t counter_button=0;
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 2


  31:Interrupt_Routines.c **** 
  32:Interrupt_Routines.c **** uint16_t timer_counter=0;
  33:Interrupt_Routines.c **** 
  34:Interrupt_Routines.c **** 
  35:Interrupt_Routines.c **** /* Variable that contains the message for UART debug communication*/
  36:Interrupt_Routines.c **** char mex[50];
  37:Interrupt_Routines.c **** 
  38:Interrupt_Routines.c **** 
  39:Interrupt_Routines.c **** /******************* Custom Interrupt on FIFO watermark ********************/
  40:Interrupt_Routines.c **** 
  41:Interrupt_Routines.c ****  CY_ISR(ISR_LIS3DH_FIFO_WATERMARK){
  28              		.loc 1 41 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  42:Interrupt_Routines.c ****     
  43:Interrupt_Routines.c ****     // Read INT1 SRC Register
  44:Interrupt_Routines.c ****     error = I2C_Peripheral_ReadRegister(LIS3DH_DEVICE_ADDRESS,
  38              		.loc 1 44 0
  39 0002 114C     		ldr	r4, .L4
  40 0004 2246     		mov	r2, r4
  41 0006 3121     		movs	r1, #49
  42 0008 1820     		movs	r0, #24
  43 000a FFF7FEFF 		bl	I2C_Peripheral_ReadRegister
  44              	.LVL0:
  45 000e 0F4B     		ldr	r3, .L4+4
  46 0010 1870     		strb	r0, [r3]
  45:Interrupt_Routines.c ****                                          LIS3DH_INT1_SRC,
  46:Interrupt_Routines.c ****                                          &int1_src_reg);
  47:Interrupt_Routines.c ****     if(int1_src_reg & 0x40) //read if 1 or more interrupts have been generated on INT1_SRC_REG
  47              		.loc 1 47 0
  48 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  49 0014 13F0400F 		tst	r3, #64
  50 0018 12D0     		beq	.L2
  48:Interrupt_Routines.c ****     {
  49:Interrupt_Routines.c ****         sprintf(mex, "Overthreshold event \r\n");
  51              		.loc 1 49 0
  52 001a 0D4D     		ldr	r5, .L4+8
  53 001c 0D4C     		ldr	r4, .L4+12
  54 001e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
  55 0020 2860     		str	r0, [r5]	@ unaligned
  56 0022 6960     		str	r1, [r5, #4]	@ unaligned
  57 0024 AA60     		str	r2, [r5, #8]	@ unaligned
  58 0026 EB60     		str	r3, [r5, #12]	@ unaligned
  59 0028 2068     		ldr	r0, [r4]	@ unaligned
  60 002a 2861     		str	r0, [r5, #16]	@ unaligned
  61 002c A288     		ldrh	r2, [r4, #4]	@ unaligned
  62 002e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
  63 0030 AA82     		strh	r2, [r5, #20]	@ unaligned
  64 0032 AB75     		strb	r3, [r5, #22]
  50:Interrupt_Routines.c ****         UART_Debug_PutString(mex);
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 3


  65              		.loc 1 50 0
  66 0034 2846     		mov	r0, r5
  67 0036 FFF7FEFF 		bl	UART_Debug_PutString
  68              	.LVL1:
  51:Interrupt_Routines.c ****         flag_eeprom=1; // Write overthreshold data on EEPROM
  69              		.loc 1 51 0
  70 003a 0122     		movs	r2, #1
  71 003c 064B     		ldr	r3, .L4+16
  72 003e 1A70     		strb	r2, [r3]
  73              	.L2:
  52:Interrupt_Routines.c ****     }
  53:Interrupt_Routines.c **** 
  54:Interrupt_Routines.c ****     OVR_FLAG=1; // Start reading data from LIS3DH
  74              		.loc 1 54 0
  75 0040 0122     		movs	r2, #1
  76 0042 064B     		ldr	r3, .L4+20
  77 0044 1A70     		strb	r2, [r3]
  78 0046 38BD     		pop	{r3, r4, r5, pc}
  79              	.L5:
  80              		.align	2
  81              	.L4:
  82 0048 00000000 		.word	int1_src_reg
  83 004c 00000000 		.word	error
  84 0050 00000000 		.word	mex
  85 0054 00000000 		.word	.LC0
  86 0058 00000000 		.word	flag_eeprom
  87 005c 00000000 		.word	OVR_FLAG
  88              		.cfi_endproc
  89              	.LFE64:
  90              		.size	ISR_LIS3DH_FIFO_WATERMARK, .-ISR_LIS3DH_FIFO_WATERMARK
  91              		.section	.text.ISR_TIMER,"ax",%progbits
  92              		.align	2
  93              		.global	ISR_TIMER
  94              		.thumb
  95              		.thumb_func
  96              		.type	ISR_TIMER, %function
  97              	ISR_TIMER:
  98              	.LFB65:
  55:Interrupt_Routines.c **** }
  56:Interrupt_Routines.c **** 
  57:Interrupt_Routines.c **** /****************** Custom Interrupt on Timer counter ************************/
  58:Interrupt_Routines.c **** 
  59:Interrupt_Routines.c **** // Period = 1ms
  60:Interrupt_Routines.c **** 
  61:Interrupt_Routines.c **** CY_ISR (ISR_TIMER)
  62:Interrupt_Routines.c **** {
  99              		.loc 1 62 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103 0000 38B5     		push	{r3, r4, r5, lr}
 104              		.cfi_def_cfa_offset 16
 105              		.cfi_offset 3, -16
 106              		.cfi_offset 4, -12
 107              		.cfi_offset 5, -8
 108              		.cfi_offset 14, -4
  63:Interrupt_Routines.c ****     
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 4


  64:Interrupt_Routines.c ****     /* Read Timer Status Register to reset the counter */
  65:Interrupt_Routines.c ****     Timer_ReadStatusRegister();
 109              		.loc 1 65 0
 110 0002 FFF7FEFF 		bl	Timer_ReadStatusRegister
 111              	.LVL2:
  66:Interrupt_Routines.c ****     
  67:Interrupt_Routines.c ****     switch (status){
 112              		.loc 1 67 0
 113 0006 9D4B     		ldr	r3, .L27
 114 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 115 000a DBB2     		uxtb	r3, r3
 116 000c 012B     		cmp	r3, #1
 117 000e 48D0     		beq	.L8
 118 0010 1BB1     		cbz	r3, .L9
 119 0012 022B     		cmp	r3, #2
 120 0014 00F0F380 		beq	.L10
 121 0018 38BD     		pop	{r3, r4, r5, pc}
 122              	.L9:
  68:Interrupt_Routines.c ****         /************      OFF MODE      *****************/
  69:Interrupt_Routines.c ****         case 0:
  70:Interrupt_Routines.c ****             // Check if button has been pressed
  71:Interrupt_Routines.c ****             if (counter_button!=0){
 123              		.loc 1 71 0
 124 001a 994B     		ldr	r3, .L27+4
 125 001c 1B88     		ldrh	r3, [r3]
 126 001e 9BB2     		uxth	r3, r3
 127 0020 002B     		cmp	r3, #0
 128 0022 00F02A81 		beq	.L6
  72:Interrupt_Routines.c ****                 timer_counter++;
 129              		.loc 1 72 0
 130 0026 964A     		ldr	r2, .L27+4
 131 0028 5388     		ldrh	r3, [r2, #2]
 132 002a 0133     		adds	r3, r3, #1
 133 002c 9BB2     		uxth	r3, r3
 134 002e 5380     		strh	r3, [r2, #2]	@ movhi
  73:Interrupt_Routines.c ****                 if (timer_counter>2000){
 135              		.loc 1 73 0
 136 0030 B3F5FA6F 		cmp	r3, #2000
 137 0034 40F22181 		bls	.L6
  74:Interrupt_Routines.c ****             
  75:Interrupt_Routines.c ****                     
  76:Interrupt_Routines.c ****             
  77:Interrupt_Routines.c ****                     
  78:Interrupt_Routines.c ****                     timer_counter=0;
 138              		.loc 1 78 0
 139 0038 1346     		mov	r3, r2
 140 003a 0022     		movs	r2, #0
 141 003c 5A80     		strh	r2, [r3, #2]	@ movhi
  79:Interrupt_Routines.c ****                     
  80:Interrupt_Routines.c ****                     if (counter_button==2){
 142              		.loc 1 80 0
 143 003e 1B88     		ldrh	r3, [r3]
 144 0040 9BB2     		uxth	r3, r3
 145 0042 022B     		cmp	r3, #2
 146 0044 0FD1     		bne	.L11
  81:Interrupt_Routines.c ****                         sprintf(mex, "Switch ON device \r\n");
 147              		.loc 1 81 0
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 5


 148 0046 8F4D     		ldr	r5, .L27+8
 149 0048 8F4C     		ldr	r4, .L27+12
 150 004a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 151 004c 2860     		str	r0, [r5]	@ unaligned
 152 004e 6960     		str	r1, [r5, #4]	@ unaligned
 153 0050 AA60     		str	r2, [r5, #8]	@ unaligned
 154 0052 EB60     		str	r3, [r5, #12]	@ unaligned
 155 0054 2068     		ldr	r0, [r4]	@ unaligned
 156 0056 2861     		str	r0, [r5, #16]	@ unaligned
  82:Interrupt_Routines.c ****                         UART_Debug_PutString(mex);
 157              		.loc 1 82 0
 158 0058 2846     		mov	r0, r5
 159 005a FFF7FEFF 		bl	UART_Debug_PutString
 160              	.LVL3:
  83:Interrupt_Routines.c ****                         //repetition=0;
  84:Interrupt_Routines.c ****                         status=1;
 161              		.loc 1 84 0
 162 005e 0122     		movs	r2, #1
 163 0060 864B     		ldr	r3, .L27
 164 0062 1A70     		strb	r2, [r3]
 165 0064 19E0     		b	.L12
 166              	.L11:
  85:Interrupt_Routines.c ****                         
  86:Interrupt_Routines.c ****                     }
  87:Interrupt_Routines.c ****                     else if (counter_button>3){
 167              		.loc 1 87 0
 168 0066 864B     		ldr	r3, .L27+4
 169 0068 1B88     		ldrh	r3, [r3]
 170 006a 9BB2     		uxth	r3, r3
 171 006c 032B     		cmp	r3, #3
 172 006e 14D9     		bls	.L12
  88:Interrupt_Routines.c ****                         prev_state=0;
 173              		.loc 1 88 0
 174 0070 0022     		movs	r2, #0
 175 0072 834B     		ldr	r3, .L27+4
 176 0074 1A71     		strb	r2, [r3, #4]
  89:Interrupt_Routines.c ****                         sprintf(mex, "Switch to Configuration Mode \r\n");
 177              		.loc 1 89 0
 178 0076 834D     		ldr	r5, .L27+8
 179 0078 844C     		ldr	r4, .L27+16
 180 007a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 181 007c 2860     		str	r0, [r5]	@ unaligned
 182 007e 6960     		str	r1, [r5, #4]	@ unaligned
 183 0080 AA60     		str	r2, [r5, #8]	@ unaligned
 184 0082 EB60     		str	r3, [r5, #12]	@ unaligned
 185 0084 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 186 0086 2861     		str	r0, [r5, #16]	@ unaligned
 187 0088 6961     		str	r1, [r5, #20]	@ unaligned
 188 008a AA61     		str	r2, [r5, #24]	@ unaligned
 189 008c EB61     		str	r3, [r5, #28]	@ unaligned
  90:Interrupt_Routines.c ****                         UART_Debug_PutString(mex);
 190              		.loc 1 90 0
 191 008e 2846     		mov	r0, r5
 192 0090 FFF7FEFF 		bl	UART_Debug_PutString
 193              	.LVL4:
  91:Interrupt_Routines.c ****                         //repetition=0;
  92:Interrupt_Routines.c ****                         status=2;
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 6


 194              		.loc 1 92 0
 195 0094 0222     		movs	r2, #2
 196 0096 794B     		ldr	r3, .L27
 197 0098 1A70     		strb	r2, [r3]
 198              	.L12:
  93:Interrupt_Routines.c ****                         
  94:Interrupt_Routines.c ****                     }
  95:Interrupt_Routines.c ****                     
  96:Interrupt_Routines.c ****                     counter_button=0;
 199              		.loc 1 96 0
 200 009a 0022     		movs	r2, #0
 201 009c 784B     		ldr	r3, .L27+4
 202 009e 1A80     		strh	r2, [r3]	@ movhi
 203 00a0 38BD     		pop	{r3, r4, r5, pc}
 204              	.L8:
  97:Interrupt_Routines.c ****                 }
  98:Interrupt_Routines.c ****             }
  99:Interrupt_Routines.c ****         break;
 100:Interrupt_Routines.c ****         /************      ON MODE      *****************/
 101:Interrupt_Routines.c ****         case 1:
 102:Interrupt_Routines.c ****             
 103:Interrupt_Routines.c ****                 /* Decrement the counter variable when Interrupt occurs */
 104:Interrupt_Routines.c ****                 counter_blue--;
 205              		.loc 1 104 0
 206 00a2 7B4A     		ldr	r2, .L27+20
 207 00a4 1388     		ldrh	r3, [r2]
 208 00a6 9BB2     		uxth	r3, r3
 209 00a8 013B     		subs	r3, r3, #1
 210 00aa 9BB2     		uxth	r3, r3
 211 00ac 1380     		strh	r3, [r2]	@ movhi
 105:Interrupt_Routines.c ****                 counter_green--;
 212              		.loc 1 105 0
 213 00ae 7949     		ldr	r1, .L27+24
 214 00b0 0B88     		ldrh	r3, [r1]
 215 00b2 9BB2     		uxth	r3, r3
 216 00b4 013B     		subs	r3, r3, #1
 217 00b6 9BB2     		uxth	r3, r3
 218 00b8 0B80     		strh	r3, [r1]	@ movhi
 106:Interrupt_Routines.c ****                 counter_red--;
 219              		.loc 1 106 0
 220 00ba 7749     		ldr	r1, .L27+28
 221 00bc 0B88     		ldrh	r3, [r1]
 222 00be 9BB2     		uxth	r3, r3
 223 00c0 013B     		subs	r3, r3, #1
 224 00c2 9BB2     		uxth	r3, r3
 225 00c4 0B80     		strh	r3, [r1]	@ movhi
 107:Interrupt_Routines.c ****     
 108:Interrupt_Routines.c ****                 /********************* BLUE LED ******************/
 109:Interrupt_Routines.c ****                 /* If the counter variable goes to 0, the Blue channel must be toggled*/
 110:Interrupt_Routines.c ****                 if (counter_blue==0)
 226              		.loc 1 110 0
 227 00c6 1388     		ldrh	r3, [r2]
 228 00c8 9BB2     		uxth	r3, r3
 229 00ca 83B9     		cbnz	r3, .L13
 111:Interrupt_Routines.c ****                     {
 112:Interrupt_Routines.c ****                         /* Toggle the Led only if the period set is lower than the THR_OFF */
 113:Interrupt_Routines.c ****                         if (period_blue<=THR_OFF) BLUE_Led_Write(~BLUE_Led_Read());
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 7


 230              		.loc 1 113 0
 231 00cc 734B     		ldr	r3, .L27+32
 232 00ce 1B88     		ldrh	r3, [r3]
 233 00d0 9BB2     		uxth	r3, r3
 234 00d2 B3F5B67F 		cmp	r3, #364
 235 00d6 05D2     		bcs	.L14
 236              		.loc 1 113 0 is_stmt 0 discriminator 1
 237 00d8 FFF7FEFF 		bl	BLUE_Led_Read
 238              	.LVL5:
 239 00dc C043     		mvns	r0, r0
 240 00de C0B2     		uxtb	r0, r0
 241 00e0 FFF7FEFF 		bl	BLUE_Led_Write
 242              	.LVL6:
 243              	.L14:
 114:Interrupt_Routines.c ****                         /* Reset the counter to the period value */
 115:Interrupt_Routines.c ****                         counter_blue = period_blue;
 244              		.loc 1 115 0 is_stmt 1
 245 00e4 6D4B     		ldr	r3, .L27+32
 246 00e6 1B88     		ldrh	r3, [r3]
 247 00e8 9BB2     		uxth	r3, r3
 248 00ea 694A     		ldr	r2, .L27+20
 249 00ec 1380     		strh	r3, [r2]	@ movhi
 250              	.L13:
 116:Interrupt_Routines.c ****                     }
 117:Interrupt_Routines.c ****     
 118:Interrupt_Routines.c ****                 /* In case the period is set more than THR_OFF, turn off the Led */
 119:Interrupt_Routines.c ****                 if (period_blue>THR_OFF)
 251              		.loc 1 119 0
 252 00ee 6B4B     		ldr	r3, .L27+32
 253 00f0 1B88     		ldrh	r3, [r3]
 254 00f2 9BB2     		uxth	r3, r3
 255 00f4 B3F5B67F 		cmp	r3, #364
 256 00f8 02D3     		bcc	.L15
 120:Interrupt_Routines.c ****                     {
 121:Interrupt_Routines.c ****                         BLUE_Led_Write(1);
 257              		.loc 1 121 0
 258 00fa 0120     		movs	r0, #1
 259 00fc FFF7FEFF 		bl	BLUE_Led_Write
 260              	.LVL7:
 261              	.L15:
 122:Interrupt_Routines.c ****                     }
 123:Interrupt_Routines.c ****      
 124:Interrupt_Routines.c ****     
 125:Interrupt_Routines.c ****                 /******************** GREEN LED *******************/
 126:Interrupt_Routines.c ****                 /* If the counter variable goes to 0, the Green channel must be toggled*/
 127:Interrupt_Routines.c ****                 if (counter_green==0)
 262              		.loc 1 127 0
 263 0100 644B     		ldr	r3, .L27+24
 264 0102 1B88     		ldrh	r3, [r3]
 265 0104 9BB2     		uxth	r3, r3
 266 0106 83B9     		cbnz	r3, .L16
 128:Interrupt_Routines.c ****                 {
 129:Interrupt_Routines.c ****                     /* Toggle the Led only if the period set is lower than the THR_OFF */
 130:Interrupt_Routines.c ****                     if (period_green<=THR_OFF) GREEN_Led_Write(~GREEN_Led_Read());
 267              		.loc 1 130 0
 268 0108 654B     		ldr	r3, .L27+36
 269 010a 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 8


 270 010c 9BB2     		uxth	r3, r3
 271 010e B3F5B67F 		cmp	r3, #364
 272 0112 05D2     		bcs	.L17
 273              		.loc 1 130 0 is_stmt 0 discriminator 1
 274 0114 FFF7FEFF 		bl	GREEN_Led_Read
 275              	.LVL8:
 276 0118 C043     		mvns	r0, r0
 277 011a C0B2     		uxtb	r0, r0
 278 011c FFF7FEFF 		bl	GREEN_Led_Write
 279              	.LVL9:
 280              	.L17:
 131:Interrupt_Routines.c ****                     /* Reset the counter to the period value */
 132:Interrupt_Routines.c ****                     counter_green = period_green;
 281              		.loc 1 132 0 is_stmt 1
 282 0120 5F4B     		ldr	r3, .L27+36
 283 0122 1B88     		ldrh	r3, [r3]
 284 0124 9BB2     		uxth	r3, r3
 285 0126 5B4A     		ldr	r2, .L27+24
 286 0128 1380     		strh	r3, [r2]	@ movhi
 287              	.L16:
 133:Interrupt_Routines.c ****                 }
 134:Interrupt_Routines.c ****                 /* In case the period is set more than THR_OFF, turn off the Led */
 135:Interrupt_Routines.c ****                 if (period_green>THR_OFF)
 288              		.loc 1 135 0
 289 012a 5D4B     		ldr	r3, .L27+36
 290 012c 1B88     		ldrh	r3, [r3]
 291 012e 9BB2     		uxth	r3, r3
 292 0130 B3F5B67F 		cmp	r3, #364
 293 0134 02D3     		bcc	.L18
 136:Interrupt_Routines.c ****                 {
 137:Interrupt_Routines.c ****                     GREEN_Led_Write(1);
 294              		.loc 1 137 0
 295 0136 0120     		movs	r0, #1
 296 0138 FFF7FEFF 		bl	GREEN_Led_Write
 297              	.LVL10:
 298              	.L18:
 138:Interrupt_Routines.c ****                 }
 139:Interrupt_Routines.c ****                 
 140:Interrupt_Routines.c ****                 
 141:Interrupt_Routines.c ****                 /******************* RED LED **********************/
 142:Interrupt_Routines.c ****                 /* If the counter variable goes to 0, the Red channel must be toggled*/
 143:Interrupt_Routines.c ****                 if (counter_red==0 )
 299              		.loc 1 143 0
 300 013c 564B     		ldr	r3, .L27+28
 301 013e 1B88     		ldrh	r3, [r3]
 302 0140 9BB2     		uxth	r3, r3
 303 0142 83B9     		cbnz	r3, .L19
 144:Interrupt_Routines.c ****                 {
 145:Interrupt_Routines.c ****                     /* Toggle the Led only if the period set is lower than the THR_OFF */
 146:Interrupt_Routines.c ****                     if (period_red<=THR_OFF) RED_Led_Write(~RED_Led_Read());
 304              		.loc 1 146 0
 305 0144 574B     		ldr	r3, .L27+40
 306 0146 1B88     		ldrh	r3, [r3]
 307 0148 9BB2     		uxth	r3, r3
 308 014a B3F5B67F 		cmp	r3, #364
 309 014e 05D2     		bcs	.L20
 310              		.loc 1 146 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 9


 311 0150 FFF7FEFF 		bl	RED_Led_Read
 312              	.LVL11:
 313 0154 C043     		mvns	r0, r0
 314 0156 C0B2     		uxtb	r0, r0
 315 0158 FFF7FEFF 		bl	RED_Led_Write
 316              	.LVL12:
 317              	.L20:
 147:Interrupt_Routines.c ****                     /* Reset the counter to the period value */
 148:Interrupt_Routines.c ****                     counter_red = period_red;
 318              		.loc 1 148 0 is_stmt 1
 319 015c 514B     		ldr	r3, .L27+40
 320 015e 1B88     		ldrh	r3, [r3]
 321 0160 9BB2     		uxth	r3, r3
 322 0162 4D4A     		ldr	r2, .L27+28
 323 0164 1380     		strh	r3, [r2]	@ movhi
 324              	.L19:
 149:Interrupt_Routines.c ****                 }
 150:Interrupt_Routines.c ****                 /* In case the period is set more than THR_OFF, turn off the Led */
 151:Interrupt_Routines.c ****                 if (period_red>THR_OFF)
 325              		.loc 1 151 0
 326 0166 4F4B     		ldr	r3, .L27+40
 327 0168 1B88     		ldrh	r3, [r3]
 328 016a 9BB2     		uxth	r3, r3
 329 016c B3F5B67F 		cmp	r3, #364
 330 0170 02D3     		bcc	.L21
 152:Interrupt_Routines.c ****                 {
 153:Interrupt_Routines.c ****                     RED_Led_Write(1);
 331              		.loc 1 153 0
 332 0172 0120     		movs	r0, #1
 333 0174 FFF7FEFF 		bl	RED_Led_Write
 334              	.LVL13:
 335              	.L21:
 154:Interrupt_Routines.c ****                 }
 155:Interrupt_Routines.c ****                 
 156:Interrupt_Routines.c ****                 /******************* TIMESTAMP ********************/
 157:Interrupt_Routines.c ****                 
 158:Interrupt_Routines.c ****                 timestamp++;
 336              		.loc 1 158 0
 337 0178 4B4A     		ldr	r2, .L27+44
 338 017a 1368     		ldr	r3, [r2]
 339 017c 0133     		adds	r3, r3, #1
 340 017e 1360     		str	r3, [r2]
 159:Interrupt_Routines.c ****                 
 160:Interrupt_Routines.c ****                 /******************* INTERNAL BUTTON ********************/
 161:Interrupt_Routines.c ****                 // When the button is pressed, increment the timer counter
 162:Interrupt_Routines.c ****                 if (counter_button!=0){
 341              		.loc 1 162 0
 342 0180 3F4B     		ldr	r3, .L27+4
 343 0182 1B88     		ldrh	r3, [r3]
 344 0184 9BB2     		uxth	r3, r3
 345 0186 002B     		cmp	r3, #0
 346 0188 77D0     		beq	.L6
 163:Interrupt_Routines.c ****                     timer_counter++;
 347              		.loc 1 163 0
 348 018a 3D4A     		ldr	r2, .L27+4
 349 018c 5388     		ldrh	r3, [r2, #2]
 350 018e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 10


 351 0190 9BB2     		uxth	r3, r3
 352 0192 5380     		strh	r3, [r2, #2]	@ movhi
 164:Interrupt_Routines.c ****                     if (timer_counter>2000){
 353              		.loc 1 164 0
 354 0194 B3F5FA6F 		cmp	r3, #2000
 355 0198 6FD9     		bls	.L6
 165:Interrupt_Routines.c ****                         
 166:Interrupt_Routines.c ****                         // If button was pressed 2 times, go to OFF MODE
 167:Interrupt_Routines.c ****                         if (counter_button==2){
 356              		.loc 1 167 0
 357 019a 1388     		ldrh	r3, [r2]
 358 019c 9BB2     		uxth	r3, r3
 359 019e 022B     		cmp	r3, #2
 360 01a0 0ED1     		bne	.L22
 168:Interrupt_Routines.c ****                             sprintf(mex, "Switch OFF \r\n");
 361              		.loc 1 168 0
 362 01a2 384C     		ldr	r4, .L27+8
 363 01a4 414B     		ldr	r3, .L27+48
 364 01a6 07CB     		ldmia	r3!, {r0, r1, r2}
 365 01a8 2060     		str	r0, [r4]	@ unaligned
 366 01aa 6160     		str	r1, [r4, #4]	@ unaligned
 367 01ac A260     		str	r2, [r4, #8]	@ unaligned
 368 01ae 1B88     		ldrh	r3, [r3]	@ unaligned
 369 01b0 A381     		strh	r3, [r4, #12]	@ unaligned
 169:Interrupt_Routines.c ****                             UART_Debug_PutString(mex);
 370              		.loc 1 169 0
 371 01b2 2046     		mov	r0, r4
 372 01b4 FFF7FEFF 		bl	UART_Debug_PutString
 373              	.LVL14:
 170:Interrupt_Routines.c ****                             //repetition=0;
 171:Interrupt_Routines.c ****                             status=0;
 374              		.loc 1 171 0
 375 01b8 0022     		movs	r2, #0
 376 01ba 304B     		ldr	r3, .L27
 377 01bc 1A70     		strb	r2, [r3]
 378 01be 19E0     		b	.L23
 379              	.L22:
 172:Interrupt_Routines.c ****                             
 173:Interrupt_Routines.c ****                             
 174:Interrupt_Routines.c ****                         }
 175:Interrupt_Routines.c ****                         // If button was pressed more than 3 times (long press), go to CONFIGURATIO
 176:Interrupt_Routines.c ****                         else if (counter_button>3){
 380              		.loc 1 176 0
 381 01c0 2F4B     		ldr	r3, .L27+4
 382 01c2 1B88     		ldrh	r3, [r3]
 383 01c4 9BB2     		uxth	r3, r3
 384 01c6 032B     		cmp	r3, #3
 385 01c8 14D9     		bls	.L23
 177:Interrupt_Routines.c ****                             
 178:Interrupt_Routines.c ****                             prev_state=1;
 386              		.loc 1 178 0
 387 01ca 0122     		movs	r2, #1
 388 01cc 2C4B     		ldr	r3, .L27+4
 389 01ce 1A71     		strb	r2, [r3, #4]
 179:Interrupt_Routines.c ****                             sprintf(mex, "Switch to Configuration Mode \r\n");
 390              		.loc 1 179 0
 391 01d0 2C4D     		ldr	r5, .L27+8
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 11


 392 01d2 2E4C     		ldr	r4, .L27+16
 393 01d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 394 01d6 2860     		str	r0, [r5]	@ unaligned
 395 01d8 6960     		str	r1, [r5, #4]	@ unaligned
 396 01da AA60     		str	r2, [r5, #8]	@ unaligned
 397 01dc EB60     		str	r3, [r5, #12]	@ unaligned
 398 01de 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 399 01e0 2861     		str	r0, [r5, #16]	@ unaligned
 400 01e2 6961     		str	r1, [r5, #20]	@ unaligned
 401 01e4 AA61     		str	r2, [r5, #24]	@ unaligned
 402 01e6 EB61     		str	r3, [r5, #28]	@ unaligned
 180:Interrupt_Routines.c ****                             UART_Debug_PutString(mex);
 403              		.loc 1 180 0
 404 01e8 2846     		mov	r0, r5
 405 01ea FFF7FEFF 		bl	UART_Debug_PutString
 406              	.LVL15:
 181:Interrupt_Routines.c ****                             //repetition=0;
 182:Interrupt_Routines.c ****                             status=2;
 407              		.loc 1 182 0
 408 01ee 0222     		movs	r2, #2
 409 01f0 224B     		ldr	r3, .L27
 410 01f2 1A70     		strb	r2, [r3]
 411              	.L23:
 183:Interrupt_Routines.c ****                             
 184:Interrupt_Routines.c ****                         
 185:Interrupt_Routines.c ****                         }
 186:Interrupt_Routines.c ****                          
 187:Interrupt_Routines.c ****                         // Reset counters
 188:Interrupt_Routines.c ****                         counter_button=0;
 412              		.loc 1 188 0
 413 01f4 224B     		ldr	r3, .L27+4
 414 01f6 0022     		movs	r2, #0
 415 01f8 1A80     		strh	r2, [r3]	@ movhi
 189:Interrupt_Routines.c ****                         timer_counter=0;
 416              		.loc 1 189 0
 417 01fa 5A80     		strh	r2, [r3, #2]	@ movhi
 418 01fc 38BD     		pop	{r3, r4, r5, pc}
 419              	.L10:
 190:Interrupt_Routines.c ****                         
 191:Interrupt_Routines.c ****                         
 192:Interrupt_Routines.c ****                     }
 193:Interrupt_Routines.c ****                     
 194:Interrupt_Routines.c ****                     
 195:Interrupt_Routines.c ****                 }
 196:Interrupt_Routines.c ****                         
 197:Interrupt_Routines.c ****                         
 198:Interrupt_Routines.c ****         break;
 199:Interrupt_Routines.c ****                 
 200:Interrupt_Routines.c ****         /************      CONFIGURATION MODE      *****************/        
 201:Interrupt_Routines.c ****         case 2:
 202:Interrupt_Routines.c ****                 
 203:Interrupt_Routines.c ****                 
 204:Interrupt_Routines.c ****                 //counter_int_led--;
 205:Interrupt_Routines.c ****                 /* Decrement the counter variable when Interrupt occurs */
 206:Interrupt_Routines.c ****                 counter_blue--;
 420              		.loc 1 206 0
 421 01fe 244A     		ldr	r2, .L27+20
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 12


 422 0200 1388     		ldrh	r3, [r2]
 423 0202 9BB2     		uxth	r3, r3
 424 0204 013B     		subs	r3, r3, #1
 425 0206 9BB2     		uxth	r3, r3
 426 0208 1380     		strh	r3, [r2]	@ movhi
 207:Interrupt_Routines.c ****                 
 208:Interrupt_Routines.c ****                 
 209:Interrupt_Routines.c ****                 
 210:Interrupt_Routines.c ****                  /******************* INTERNAL BUTTON ********************/
 211:Interrupt_Routines.c ****                 // When the button is pressed, increment the timer counter
 212:Interrupt_Routines.c ****                 if (counter_button!=0){
 427              		.loc 1 212 0
 428 020a 1D4B     		ldr	r3, .L27+4
 429 020c 1B88     		ldrh	r3, [r3]
 430 020e 9BB2     		uxth	r3, r3
 431 0210 23B3     		cbz	r3, .L24
 213:Interrupt_Routines.c ****                     timer_counter++;
 432              		.loc 1 213 0
 433 0212 1B4A     		ldr	r2, .L27+4
 434 0214 5388     		ldrh	r3, [r2, #2]
 435 0216 0133     		adds	r3, r3, #1
 436 0218 9BB2     		uxth	r3, r3
 437 021a 5380     		strh	r3, [r2, #2]	@ movhi
 214:Interrupt_Routines.c ****                     if (timer_counter>2000){
 438              		.loc 1 214 0
 439 021c B3F5FA6F 		cmp	r3, #2000
 440 0220 1CD9     		bls	.L24
 215:Interrupt_Routines.c ****                         
 216:Interrupt_Routines.c ****                         
 217:Interrupt_Routines.c ****                         // If button was pressed more than 3 times (long press), go to the previous
 218:Interrupt_Routines.c ****                         if (counter_button>3){
 441              		.loc 1 218 0
 442 0222 1388     		ldrh	r3, [r2]
 443 0224 9BB2     		uxth	r3, r3
 444 0226 032B     		cmp	r3, #3
 445 0228 14D9     		bls	.L25
 219:Interrupt_Routines.c ****                             sprintf(mex, "Switch to previous Mode \r\n");
 446              		.loc 1 219 0
 447 022a 164D     		ldr	r5, .L27+8
 448 022c 204C     		ldr	r4, .L27+52
 449 022e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 450 0230 2860     		str	r0, [r5]	@ unaligned
 451 0232 6960     		str	r1, [r5, #4]	@ unaligned
 452 0234 AA60     		str	r2, [r5, #8]	@ unaligned
 453 0236 EB60     		str	r3, [r5, #12]	@ unaligned
 454 0238 03CC     		ldmia	r4!, {r0, r1}
 455 023a 2861     		str	r0, [r5, #16]	@ unaligned
 456 023c 6961     		str	r1, [r5, #20]	@ unaligned
 457 023e 2288     		ldrh	r2, [r4]	@ unaligned
 458 0240 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 459 0242 2A83     		strh	r2, [r5, #24]	@ unaligned
 460 0244 AB76     		strb	r3, [r5, #26]
 220:Interrupt_Routines.c ****                             UART_Debug_PutString(mex);
 461              		.loc 1 220 0
 462 0246 2846     		mov	r0, r5
 463 0248 FFF7FEFF 		bl	UART_Debug_PutString
 464              	.LVL16:
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 13


 221:Interrupt_Routines.c ****                             //repetition=0;
 222:Interrupt_Routines.c ****                             status= prev_state;
 465              		.loc 1 222 0
 466 024c 0C4B     		ldr	r3, .L27+4
 467 024e 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 468 0250 0A4B     		ldr	r3, .L27
 469 0252 1A70     		strb	r2, [r3]
 470              	.L25:
 223:Interrupt_Routines.c **** 
 224:Interrupt_Routines.c ****                         
 225:Interrupt_Routines.c ****                         }
 226:Interrupt_Routines.c ****                         
 227:Interrupt_Routines.c ****                         // Reset counters
 228:Interrupt_Routines.c ****                         counter_button=0;
 471              		.loc 1 228 0
 472 0254 0A4B     		ldr	r3, .L27+4
 473 0256 0022     		movs	r2, #0
 474 0258 1A80     		strh	r2, [r3]	@ movhi
 229:Interrupt_Routines.c ****                         timer_counter=0;
 475              		.loc 1 229 0
 476 025a 5A80     		strh	r2, [r3, #2]	@ movhi
 477              	.L24:
 230:Interrupt_Routines.c ****                          
 231:Interrupt_Routines.c ****                     }
 232:Interrupt_Routines.c ****                 }
 233:Interrupt_Routines.c ****                 
 234:Interrupt_Routines.c ****    
 235:Interrupt_Routines.c ****                 /********************* BLUE LED ******************/
 236:Interrupt_Routines.c ****                 /* If the counter variable goes to 0, the Blue channel must be toggled*/
 237:Interrupt_Routines.c ****                 if (counter_blue==0)
 478              		.loc 1 237 0
 479 025c 0C4B     		ldr	r3, .L27+20
 480 025e 1B88     		ldrh	r3, [r3]
 481 0260 9BB2     		uxth	r3, r3
 482 0262 53B9     		cbnz	r3, .L6
 238:Interrupt_Routines.c ****                     {
 239:Interrupt_Routines.c ****                         BLUE_Led_Write(~BLUE_Led_Read());
 483              		.loc 1 239 0
 484 0264 FFF7FEFF 		bl	BLUE_Led_Read
 485              	.LVL17:
 486 0268 C043     		mvns	r0, r0
 487 026a C0B2     		uxtb	r0, r0
 488 026c FFF7FEFF 		bl	BLUE_Led_Write
 489              	.LVL18:
 240:Interrupt_Routines.c ****                         /* Reset the counter to the period value */
 241:Interrupt_Routines.c ****                         counter_blue = period_blue;
 490              		.loc 1 241 0
 491 0270 0A4B     		ldr	r3, .L27+32
 492 0272 1B88     		ldrh	r3, [r3]
 493 0274 9BB2     		uxth	r3, r3
 494 0276 064A     		ldr	r2, .L27+20
 495 0278 1380     		strh	r3, [r2]	@ movhi
 496              	.L6:
 497 027a 38BD     		pop	{r3, r4, r5, pc}
 498              	.L28:
 499              		.align	2
 500              	.L27:
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 14


 501 027c 00000000 		.word	status
 502 0280 00000000 		.word	.LANCHOR0
 503 0284 00000000 		.word	mex
 504 0288 18000000 		.word	.LC1
 505 028c 2C000000 		.word	.LC2
 506 0290 00000000 		.word	counter_blue
 507 0294 00000000 		.word	counter_green
 508 0298 00000000 		.word	counter_red
 509 029c 00000000 		.word	period_blue
 510 02a0 00000000 		.word	period_green
 511 02a4 00000000 		.word	period_red
 512 02a8 00000000 		.word	timestamp
 513 02ac 4C000000 		.word	.LC3
 514 02b0 5C000000 		.word	.LC4
 515              		.cfi_endproc
 516              	.LFE65:
 517              		.size	ISR_TIMER, .-ISR_TIMER
 518              		.section	.text.ISR_COUNTER_BUTTON,"ax",%progbits
 519              		.align	2
 520              		.global	ISR_COUNTER_BUTTON
 521              		.thumb
 522              		.thumb_func
 523              		.type	ISR_COUNTER_BUTTON, %function
 524              	ISR_COUNTER_BUTTON:
 525              	.LFB66:
 242:Interrupt_Routines.c ****                     }
 243:Interrupt_Routines.c ****     
 244:Interrupt_Routines.c **** 
 245:Interrupt_Routines.c ****         break;
 246:Interrupt_Routines.c ****     
 247:Interrupt_Routines.c ****     }
 248:Interrupt_Routines.c **** }
 249:Interrupt_Routines.c **** 
 250:Interrupt_Routines.c **** /****************** Custom Interrupt on Timer Button counter ************************/
 251:Interrupt_Routines.c **** 
 252:Interrupt_Routines.c **** // When the Internal Button is pressed, the 'q' output of the Debouncer goes to 0.
 253:Interrupt_Routines.c **** // Using a NOT port, this pression 'enable' the Timer Button coumponents, which starts
 254:Interrupt_Routines.c **** // to increment. An interrupt is generated on its Timer Counter with a period of 100ms
 255:Interrupt_Routines.c **** 
 256:Interrupt_Routines.c ****  CY_ISR(ISR_COUNTER_BUTTON)
 257:Interrupt_Routines.c **** {
 526              		.loc 1 257 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530 0000 38B5     		push	{r3, r4, r5, lr}
 531              		.cfi_def_cfa_offset 16
 532              		.cfi_offset 3, -16
 533              		.cfi_offset 4, -12
 534              		.cfi_offset 5, -8
 535              		.cfi_offset 14, -4
 258:Interrupt_Routines.c ****     // Read Status Register in order to reset it
 259:Interrupt_Routines.c ****     Timer_Button_ReadStatusRegister();
 536              		.loc 1 259 0
 537 0002 FFF7FEFF 		bl	Timer_Button_ReadStatusRegister
 538              	.LVL19:
 260:Interrupt_Routines.c ****     // Increment by 1 the counter button variable
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 15


 261:Interrupt_Routines.c ****     counter_button++;
 539              		.loc 1 261 0
 540 0006 094A     		ldr	r2, .L31
 541 0008 1388     		ldrh	r3, [r2]
 542 000a 9BB2     		uxth	r3, r3
 543 000c 0133     		adds	r3, r3, #1
 544 000e 9BB2     		uxth	r3, r3
 545 0010 1380     		strh	r3, [r2]	@ movhi
 262:Interrupt_Routines.c ****     
 263:Interrupt_Routines.c ****     sprintf(mex, "Button Pressed \r\n");
 546              		.loc 1 263 0
 547 0012 074D     		ldr	r5, .L31+4
 548 0014 074C     		ldr	r4, .L31+8
 549 0016 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 550 0018 2860     		str	r0, [r5]	@ unaligned
 551 001a 6960     		str	r1, [r5, #4]	@ unaligned
 552 001c AA60     		str	r2, [r5, #8]	@ unaligned
 553 001e EB60     		str	r3, [r5, #12]	@ unaligned
 554 0020 2388     		ldrh	r3, [r4]	@ unaligned
 555 0022 2B82     		strh	r3, [r5, #16]	@ unaligned
 264:Interrupt_Routines.c ****     UART_Debug_PutString(mex);
 556              		.loc 1 264 0
 557 0024 2846     		mov	r0, r5
 558 0026 FFF7FEFF 		bl	UART_Debug_PutString
 559              	.LVL20:
 560 002a 38BD     		pop	{r3, r4, r5, pc}
 561              	.L32:
 562              		.align	2
 563              	.L31:
 564 002c 00000000 		.word	.LANCHOR0
 565 0030 00000000 		.word	mex
 566 0034 78000000 		.word	.LC5
 567              		.cfi_endproc
 568              	.LFE66:
 569              		.size	ISR_COUNTER_BUTTON, .-ISR_COUNTER_BUTTON
 570              		.comm	mex,50,4
 571              		.global	timer_counter
 572              		.global	counter_button
 573              		.global	prev_state
 574              		.comm	int1_src_reg,1,1
 575              		.comm	watermark,1,1
 576              		.comm	error,1,1
 577              		.comm	timestamp,4,4
 578              		.comm	flag_eeprom,1,1
 579              		.comm	counter_int_led,2,2
 580              		.comm	counter_blue,2,2
 581              		.comm	counter_green,2,2
 582              		.comm	counter_red,2,2
 583              		.comm	period_int_led,1,1
 584              		.comm	period_blue,2,2
 585              		.comm	period_green,2,2
 586              		.comm	period_red,2,2
 587              		.comm	status,1,1
 588              		.comm	OVR_FLAG,1,1
 589              		.section	.rodata.str1.4,"aMS",%progbits,1
 590              		.align	2
 591              	.LC0:
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 16


 592 0000 4F766572 		.ascii	"Overthreshold event \015\012\000"
 592      74687265 
 592      73686F6C 
 592      64206576 
 592      656E7420 
 593 0017 00       		.space	1
 594              	.LC1:
 595 0018 53776974 		.ascii	"Switch ON device \015\012\000"
 595      6368204F 
 595      4E206465 
 595      76696365 
 595      200D0A00 
 596              	.LC2:
 597 002c 53776974 		.ascii	"Switch to Configuration Mode \015\012\000"
 597      63682074 
 597      6F20436F 
 597      6E666967 
 597      75726174 
 598              	.LC3:
 599 004c 53776974 		.ascii	"Switch OFF \015\012\000"
 599      6368204F 
 599      4646200D 
 599      0A00
 600 005a 0000     		.space	2
 601              	.LC4:
 602 005c 53776974 		.ascii	"Switch to previous Mode \015\012\000"
 602      63682074 
 602      6F207072 
 602      6576696F 
 602      7573204D 
 603 0077 00       		.space	1
 604              	.LC5:
 605 0078 42757474 		.ascii	"Button Pressed \015\012\000"
 605      6F6E2050 
 605      72657373 
 605      6564200D 
 605      0A00
 606              		.bss
 607              		.align	1
 608              		.set	.LANCHOR0,. + 0
 609              		.type	counter_button, %object
 610              		.size	counter_button, 2
 611              	counter_button:
 612 0000 0000     		.space	2
 613              		.type	timer_counter, %object
 614              		.size	timer_counter, 2
 615              	timer_counter:
 616 0002 0000     		.space	2
 617              		.type	prev_state, %object
 618              		.size	prev_state, 1
 619              	prev_state:
 620 0004 00       		.space	1
 621              		.text
 622              	.Letext0:
 623              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 624              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 625              		.file 4 "ErrorCodes.h"
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 17


 626              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 627              		.file 6 "Interrupt_Routines.h"
 628              		.file 7 "I2C_Interface.h"
 629              		.file 8 "Generated_Source\\PSoC5/UART_Debug.h"
 630              		.file 9 "Generated_Source\\PSoC5/Timer.h"
 631              		.file 10 "Generated_Source\\PSoC5/BLUE_Led.h"
 632              		.file 11 "Generated_Source\\PSoC5/GREEN_Led.h"
 633              		.file 12 "Generated_Source\\PSoC5/RED_Led.h"
 634              		.file 13 "Generated_Source\\PSoC5/Timer_Button.h"
 635              		.section	.debug_info,"",%progbits
 636              	.Ldebug_info0:
 637 0000 61040000 		.4byte	0x461
 638 0004 0400     		.2byte	0x4
 639 0006 00000000 		.4byte	.Ldebug_abbrev0
 640 000a 04       		.byte	0x4
 641 000b 01       		.uleb128 0x1
 642 000c 47010000 		.4byte	.LASF57
 643 0010 0C       		.byte	0xc
 644 0011 18000000 		.4byte	.LASF58
 645 0015 37000000 		.4byte	.LASF59
 646 0019 00000000 		.4byte	.Ldebug_ranges0+0
 647 001d 00000000 		.4byte	0
 648 0021 00000000 		.4byte	.Ldebug_line0
 649 0025 02       		.uleb128 0x2
 650 0026 01       		.byte	0x1
 651 0027 06       		.byte	0x6
 652 0028 93030000 		.4byte	.LASF0
 653 002c 03       		.uleb128 0x3
 654 002d 2D000000 		.4byte	.LASF3
 655 0031 02       		.byte	0x2
 656 0032 1D       		.byte	0x1d
 657 0033 37000000 		.4byte	0x37
 658 0037 02       		.uleb128 0x2
 659 0038 01       		.byte	0x1
 660 0039 08       		.byte	0x8
 661 003a 39010000 		.4byte	.LASF1
 662 003e 02       		.uleb128 0x2
 663 003f 02       		.byte	0x2
 664 0040 05       		.byte	0x5
 665 0041 4C030000 		.4byte	.LASF2
 666 0045 03       		.uleb128 0x3
 667 0046 33020000 		.4byte	.LASF4
 668 004a 02       		.byte	0x2
 669 004b 2B       		.byte	0x2b
 670 004c 50000000 		.4byte	0x50
 671 0050 02       		.uleb128 0x2
 672 0051 02       		.byte	0x2
 673 0052 07       		.byte	0x7
 674 0053 D3000000 		.4byte	.LASF5
 675 0057 03       		.uleb128 0x3
 676 0058 B0000000 		.4byte	.LASF6
 677 005c 02       		.byte	0x2
 678 005d 3F       		.byte	0x3f
 679 005e 62000000 		.4byte	0x62
 680 0062 02       		.uleb128 0x2
 681 0063 04       		.byte	0x4
 682 0064 05       		.byte	0x5
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 18


 683 0065 1D020000 		.4byte	.LASF7
 684 0069 03       		.uleb128 0x3
 685 006a 6B020000 		.4byte	.LASF8
 686 006e 02       		.byte	0x2
 687 006f 41       		.byte	0x41
 688 0070 74000000 		.4byte	0x74
 689 0074 02       		.uleb128 0x2
 690 0075 04       		.byte	0x4
 691 0076 07       		.byte	0x7
 692 0077 85020000 		.4byte	.LASF9
 693 007b 02       		.uleb128 0x2
 694 007c 08       		.byte	0x8
 695 007d 05       		.byte	0x5
 696 007e 03030000 		.4byte	.LASF10
 697 0082 02       		.uleb128 0x2
 698 0083 08       		.byte	0x8
 699 0084 07       		.byte	0x7
 700 0085 A4020000 		.4byte	.LASF11
 701 0089 04       		.uleb128 0x4
 702 008a 04       		.byte	0x4
 703 008b 05       		.byte	0x5
 704 008c 696E7400 		.ascii	"int\000"
 705 0090 02       		.uleb128 0x2
 706 0091 04       		.byte	0x4
 707 0092 07       		.byte	0x7
 708 0093 97020000 		.4byte	.LASF12
 709 0097 03       		.uleb128 0x3
 710 0098 E6000000 		.4byte	.LASF13
 711 009c 03       		.byte	0x3
 712 009d 18       		.byte	0x18
 713 009e 2C000000 		.4byte	0x2c
 714 00a2 03       		.uleb128 0x3
 715 00a3 56030000 		.4byte	.LASF14
 716 00a7 03       		.byte	0x3
 717 00a8 24       		.byte	0x24
 718 00a9 45000000 		.4byte	0x45
 719 00ad 03       		.uleb128 0x3
 720 00ae EC020000 		.4byte	.LASF15
 721 00b2 03       		.byte	0x3
 722 00b3 2C       		.byte	0x2c
 723 00b4 57000000 		.4byte	0x57
 724 00b8 03       		.uleb128 0x3
 725 00b9 78030000 		.4byte	.LASF16
 726 00bd 03       		.byte	0x3
 727 00be 30       		.byte	0x30
 728 00bf 69000000 		.4byte	0x69
 729 00c3 02       		.uleb128 0x2
 730 00c4 04       		.byte	0x4
 731 00c5 04       		.byte	0x4
 732 00c6 23010000 		.4byte	.LASF17
 733 00ca 02       		.uleb128 0x2
 734 00cb 08       		.byte	0x8
 735 00cc 04       		.byte	0x4
 736 00cd F8000000 		.4byte	.LASF18
 737 00d1 02       		.uleb128 0x2
 738 00d2 01       		.byte	0x1
 739 00d3 08       		.byte	0x8
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 19


 740 00d4 11030000 		.4byte	.LASF19
 741 00d8 02       		.uleb128 0x2
 742 00d9 08       		.byte	0x8
 743 00da 04       		.byte	0x4
 744 00db 87030000 		.4byte	.LASF20
 745 00df 02       		.uleb128 0x2
 746 00e0 04       		.byte	0x4
 747 00e1 07       		.byte	0x7
 748 00e2 F4020000 		.4byte	.LASF21
 749 00e6 05       		.uleb128 0x5
 750 00e7 B8000000 		.4byte	0xb8
 751 00eb 05       		.uleb128 0x5
 752 00ec 97000000 		.4byte	0x97
 753 00f0 05       		.uleb128 0x5
 754 00f1 A2000000 		.4byte	0xa2
 755 00f5 06       		.uleb128 0x6
 756 00f6 01       		.byte	0x1
 757 00f7 37000000 		.4byte	0x37
 758 00fb 04       		.byte	0x4
 759 00fc 15       		.byte	0x15
 760 00fd 0E010000 		.4byte	0x10e
 761 0101 07       		.uleb128 0x7
 762 0102 6F030000 		.4byte	.LASF22
 763 0106 00       		.byte	0
 764 0107 07       		.uleb128 0x7
 765 0108 81030000 		.4byte	.LASF23
 766 010c 01       		.byte	0x1
 767 010d 00       		.byte	0
 768 010e 03       		.uleb128 0x3
 769 010f EE000000 		.4byte	.LASF24
 770 0113 04       		.byte	0x4
 771 0114 18       		.byte	0x18
 772 0115 F5000000 		.4byte	0xf5
 773 0119 08       		.uleb128 0x8
 774 011a 32030000 		.4byte	.LASF25
 775 011e 01       		.byte	0x1
 776 011f 29       		.byte	0x29
 777 0120 00000000 		.4byte	.LFB64
 778 0124 60000000 		.4byte	.LFE64-.LFB64
 779 0128 01       		.uleb128 0x1
 780 0129 9C       		.byte	0x9c
 781 012a 5E010000 		.4byte	0x15e
 782 012e 09       		.uleb128 0x9
 783 012f 0E000000 		.4byte	.LVL0
 784 0133 F6030000 		.4byte	0x3f6
 785 0137 4D010000 		.4byte	0x14d
 786 013b 0A       		.uleb128 0xa
 787 013c 01       		.uleb128 0x1
 788 013d 50       		.byte	0x50
 789 013e 01       		.uleb128 0x1
 790 013f 48       		.byte	0x48
 791 0140 0A       		.uleb128 0xa
 792 0141 01       		.uleb128 0x1
 793 0142 51       		.byte	0x51
 794 0143 02       		.uleb128 0x2
 795 0144 08       		.byte	0x8
 796 0145 31       		.byte	0x31
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 20


 797 0146 0A       		.uleb128 0xa
 798 0147 01       		.uleb128 0x1
 799 0148 52       		.byte	0x52
 800 0149 02       		.uleb128 0x2
 801 014a 74       		.byte	0x74
 802 014b 00       		.sleb128 0
 803 014c 00       		.byte	0
 804 014d 0B       		.uleb128 0xb
 805 014e 3A000000 		.4byte	.LVL1
 806 0152 01040000 		.4byte	0x401
 807 0156 0A       		.uleb128 0xa
 808 0157 01       		.uleb128 0x1
 809 0158 50       		.byte	0x50
 810 0159 02       		.uleb128 0x2
 811 015a 75       		.byte	0x75
 812 015b 00       		.sleb128 0
 813 015c 00       		.byte	0
 814 015d 00       		.byte	0
 815 015e 08       		.uleb128 0x8
 816 015f 3E020000 		.4byte	.LASF26
 817 0163 01       		.byte	0x1
 818 0164 3D       		.byte	0x3d
 819 0165 00000000 		.4byte	.LFB65
 820 0169 B4020000 		.4byte	.LFE65-.LFB65
 821 016d 01       		.uleb128 0x1
 822 016e 9C       		.byte	0x9c
 823 016f 62020000 		.4byte	0x262
 824 0173 0C       		.uleb128 0xc
 825 0174 06000000 		.4byte	.LVL2
 826 0178 0C040000 		.4byte	0x40c
 827 017c 09       		.uleb128 0x9
 828 017d 5E000000 		.4byte	.LVL3
 829 0181 01040000 		.4byte	0x401
 830 0185 90010000 		.4byte	0x190
 831 0189 0A       		.uleb128 0xa
 832 018a 01       		.uleb128 0x1
 833 018b 50       		.byte	0x50
 834 018c 02       		.uleb128 0x2
 835 018d 75       		.byte	0x75
 836 018e 00       		.sleb128 0
 837 018f 00       		.byte	0
 838 0190 09       		.uleb128 0x9
 839 0191 94000000 		.4byte	.LVL4
 840 0195 01040000 		.4byte	0x401
 841 0199 A4010000 		.4byte	0x1a4
 842 019d 0A       		.uleb128 0xa
 843 019e 01       		.uleb128 0x1
 844 019f 50       		.byte	0x50
 845 01a0 02       		.uleb128 0x2
 846 01a1 75       		.byte	0x75
 847 01a2 00       		.sleb128 0
 848 01a3 00       		.byte	0
 849 01a4 0C       		.uleb128 0xc
 850 01a5 DC000000 		.4byte	.LVL5
 851 01a9 17040000 		.4byte	0x417
 852 01ad 0C       		.uleb128 0xc
 853 01ae E4000000 		.4byte	.LVL6
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 21


 854 01b2 22040000 		.4byte	0x422
 855 01b6 09       		.uleb128 0x9
 856 01b7 00010000 		.4byte	.LVL7
 857 01bb 22040000 		.4byte	0x422
 858 01bf C9010000 		.4byte	0x1c9
 859 01c3 0A       		.uleb128 0xa
 860 01c4 01       		.uleb128 0x1
 861 01c5 50       		.byte	0x50
 862 01c6 01       		.uleb128 0x1
 863 01c7 31       		.byte	0x31
 864 01c8 00       		.byte	0
 865 01c9 0C       		.uleb128 0xc
 866 01ca 18010000 		.4byte	.LVL8
 867 01ce 2D040000 		.4byte	0x42d
 868 01d2 0C       		.uleb128 0xc
 869 01d3 20010000 		.4byte	.LVL9
 870 01d7 38040000 		.4byte	0x438
 871 01db 09       		.uleb128 0x9
 872 01dc 3C010000 		.4byte	.LVL10
 873 01e0 38040000 		.4byte	0x438
 874 01e4 EE010000 		.4byte	0x1ee
 875 01e8 0A       		.uleb128 0xa
 876 01e9 01       		.uleb128 0x1
 877 01ea 50       		.byte	0x50
 878 01eb 01       		.uleb128 0x1
 879 01ec 31       		.byte	0x31
 880 01ed 00       		.byte	0
 881 01ee 0C       		.uleb128 0xc
 882 01ef 54010000 		.4byte	.LVL11
 883 01f3 43040000 		.4byte	0x443
 884 01f7 0C       		.uleb128 0xc
 885 01f8 5C010000 		.4byte	.LVL12
 886 01fc 4E040000 		.4byte	0x44e
 887 0200 09       		.uleb128 0x9
 888 0201 78010000 		.4byte	.LVL13
 889 0205 4E040000 		.4byte	0x44e
 890 0209 13020000 		.4byte	0x213
 891 020d 0A       		.uleb128 0xa
 892 020e 01       		.uleb128 0x1
 893 020f 50       		.byte	0x50
 894 0210 01       		.uleb128 0x1
 895 0211 31       		.byte	0x31
 896 0212 00       		.byte	0
 897 0213 09       		.uleb128 0x9
 898 0214 B8010000 		.4byte	.LVL14
 899 0218 01040000 		.4byte	0x401
 900 021c 27020000 		.4byte	0x227
 901 0220 0A       		.uleb128 0xa
 902 0221 01       		.uleb128 0x1
 903 0222 50       		.byte	0x50
 904 0223 02       		.uleb128 0x2
 905 0224 74       		.byte	0x74
 906 0225 00       		.sleb128 0
 907 0226 00       		.byte	0
 908 0227 09       		.uleb128 0x9
 909 0228 EE010000 		.4byte	.LVL15
 910 022c 01040000 		.4byte	0x401
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 22


 911 0230 3B020000 		.4byte	0x23b
 912 0234 0A       		.uleb128 0xa
 913 0235 01       		.uleb128 0x1
 914 0236 50       		.byte	0x50
 915 0237 02       		.uleb128 0x2
 916 0238 75       		.byte	0x75
 917 0239 00       		.sleb128 0
 918 023a 00       		.byte	0
 919 023b 09       		.uleb128 0x9
 920 023c 4C020000 		.4byte	.LVL16
 921 0240 01040000 		.4byte	0x401
 922 0244 4F020000 		.4byte	0x24f
 923 0248 0A       		.uleb128 0xa
 924 0249 01       		.uleb128 0x1
 925 024a 50       		.byte	0x50
 926 024b 02       		.uleb128 0x2
 927 024c 75       		.byte	0x75
 928 024d 00       		.sleb128 0
 929 024e 00       		.byte	0
 930 024f 0C       		.uleb128 0xc
 931 0250 68020000 		.4byte	.LVL17
 932 0254 17040000 		.4byte	0x417
 933 0258 0C       		.uleb128 0xc
 934 0259 70020000 		.4byte	.LVL18
 935 025d 22040000 		.4byte	0x422
 936 0261 00       		.byte	0
 937 0262 0D       		.uleb128 0xd
 938 0263 F5010000 		.4byte	.LASF27
 939 0267 01       		.byte	0x1
 940 0268 0001     		.2byte	0x100
 941 026a 00000000 		.4byte	.LFB66
 942 026e 38000000 		.4byte	.LFE66-.LFB66
 943 0272 01       		.uleb128 0x1
 944 0273 9C       		.byte	0x9c
 945 0274 92020000 		.4byte	0x292
 946 0278 0C       		.uleb128 0xc
 947 0279 06000000 		.4byte	.LVL19
 948 027d 59040000 		.4byte	0x459
 949 0281 0B       		.uleb128 0xb
 950 0282 2A000000 		.4byte	.LVL20
 951 0286 01040000 		.4byte	0x401
 952 028a 0A       		.uleb128 0xa
 953 028b 01       		.uleb128 0x1
 954 028c 50       		.byte	0x50
 955 028d 02       		.uleb128 0x2
 956 028e 75       		.byte	0x75
 957 028f 00       		.sleb128 0
 958 0290 00       		.byte	0
 959 0291 00       		.byte	0
 960 0292 0E       		.uleb128 0xe
 961 0293 26020000 		.4byte	.LASF28
 962 0297 05       		.byte	0x5
 963 0298 1207     		.2byte	0x712
 964 029a 9E020000 		.4byte	0x29e
 965 029e 05       		.uleb128 0x5
 966 029f AD000000 		.4byte	0xad
 967 02a3 0F       		.uleb128 0xf
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 23


 968 02a4 08020000 		.4byte	.LASF29
 969 02a8 06       		.byte	0x6
 970 02a9 1C       		.byte	0x1c
 971 02aa EB000000 		.4byte	0xeb
 972 02ae 05       		.uleb128 0x5
 973 02af 03       		.byte	0x3
 974 02b0 00000000 		.4byte	OVR_FLAG
 975 02b4 0F       		.uleb128 0xf
 976 02b5 81000000 		.4byte	.LASF30
 977 02b9 06       		.byte	0x6
 978 02ba 1E       		.byte	0x1e
 979 02bb EB000000 		.4byte	0xeb
 980 02bf 05       		.uleb128 0x5
 981 02c0 03       		.byte	0x3
 982 02c1 00000000 		.4byte	status
 983 02c5 0F       		.uleb128 0xf
 984 02c6 97000000 		.4byte	.LASF31
 985 02ca 06       		.byte	0x6
 986 02cb 27       		.byte	0x27
 987 02cc F0000000 		.4byte	0xf0
 988 02d0 05       		.uleb128 0x5
 989 02d1 03       		.byte	0x3
 990 02d2 00000000 		.4byte	period_red
 991 02d6 0F       		.uleb128 0xf
 992 02d7 BB030000 		.4byte	.LASF32
 993 02db 06       		.byte	0x6
 994 02dc 28       		.byte	0x28
 995 02dd F0000000 		.4byte	0xf0
 996 02e1 05       		.uleb128 0x5
 997 02e2 03       		.byte	0x3
 998 02e3 00000000 		.4byte	period_green
 999 02e7 0F       		.uleb128 0xf
 1000 02e8 11020000 		.4byte	.LASF33
 1001 02ec 06       		.byte	0x6
 1002 02ed 29       		.byte	0x29
 1003 02ee F0000000 		.4byte	0xf0
 1004 02f2 05       		.uleb128 0x5
 1005 02f3 03       		.byte	0x3
 1006 02f4 00000000 		.4byte	period_blue
 1007 02f8 0F       		.uleb128 0xf
 1008 02f9 88000000 		.4byte	.LASF34
 1009 02fd 06       		.byte	0x6
 1010 02fe 2A       		.byte	0x2a
 1011 02ff EB000000 		.4byte	0xeb
 1012 0303 05       		.uleb128 0x5
 1013 0304 03       		.byte	0x3
 1014 0305 00000000 		.4byte	period_int_led
 1015 0309 0F       		.uleb128 0xf
 1016 030a BB020000 		.4byte	.LASF35
 1017 030e 06       		.byte	0x6
 1018 030f 2C       		.byte	0x2c
 1019 0310 F0000000 		.4byte	0xf0
 1020 0314 05       		.uleb128 0x5
 1021 0315 03       		.byte	0x3
 1022 0316 00000000 		.4byte	counter_red
 1023 031a 0F       		.uleb128 0xf
 1024 031b 00000000 		.4byte	.LASF36
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 24


 1025 031f 06       		.byte	0x6
 1026 0320 2D       		.byte	0x2d
 1027 0321 F0000000 		.4byte	0xf0
 1028 0325 05       		.uleb128 0x5
 1029 0326 03       		.byte	0x3
 1030 0327 00000000 		.4byte	counter_green
 1031 032b 0F       		.uleb128 0xf
 1032 032c 09010000 		.4byte	.LASF37
 1033 0330 06       		.byte	0x6
 1034 0331 2E       		.byte	0x2e
 1035 0332 F0000000 		.4byte	0xf0
 1036 0336 05       		.uleb128 0x5
 1037 0337 03       		.byte	0x3
 1038 0338 00000000 		.4byte	counter_blue
 1039 033c 0F       		.uleb128 0xf
 1040 033d 29010000 		.4byte	.LASF38
 1041 0341 06       		.byte	0x6
 1042 0342 2F       		.byte	0x2f
 1043 0343 F0000000 		.4byte	0xf0
 1044 0347 05       		.uleb128 0x5
 1045 0348 03       		.byte	0x3
 1046 0349 00000000 		.4byte	counter_int_led
 1047 034d 0F       		.uleb128 0xf
 1048 034e E0020000 		.4byte	.LASF39
 1049 0352 06       		.byte	0x6
 1050 0353 31       		.byte	0x31
 1051 0354 EB000000 		.4byte	0xeb
 1052 0358 05       		.uleb128 0x5
 1053 0359 03       		.byte	0x3
 1054 035a 00000000 		.4byte	flag_eeprom
 1055 035e 0F       		.uleb128 0xf
 1056 035f 0E000000 		.4byte	.LASF40
 1057 0363 06       		.byte	0x6
 1058 0364 32       		.byte	0x32
 1059 0365 E6000000 		.4byte	0xe6
 1060 0369 05       		.uleb128 0x5
 1061 036a 03       		.byte	0x3
 1062 036b 00000000 		.4byte	timestamp
 1063 036f 0F       		.uleb128 0xf
 1064 0370 FD020000 		.4byte	.LASF41
 1065 0374 01       		.byte	0x1
 1066 0375 1A       		.byte	0x1a
 1067 0376 0E010000 		.4byte	0x10e
 1068 037a 05       		.uleb128 0x5
 1069 037b 03       		.byte	0x3
 1070 037c 00000000 		.4byte	error
 1071 0380 0F       		.uleb128 0xf
 1072 0381 FF000000 		.4byte	.LASF42
 1073 0385 01       		.byte	0x1
 1074 0386 1B       		.byte	0x1b
 1075 0387 97000000 		.4byte	0x97
 1076 038b 05       		.uleb128 0x5
 1077 038c 03       		.byte	0x3
 1078 038d 00000000 		.4byte	watermark
 1079 0391 0F       		.uleb128 0xf
 1080 0392 AE030000 		.4byte	.LASF43
 1081 0396 01       		.byte	0x1
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 25


 1082 0397 1C       		.byte	0x1c
 1083 0398 97000000 		.4byte	0x97
 1084 039c 05       		.uleb128 0x5
 1085 039d 03       		.byte	0x3
 1086 039e 00000000 		.4byte	int1_src_reg
 1087 03a2 0F       		.uleb128 0xf
 1088 03a3 D5020000 		.4byte	.LASF44
 1089 03a7 01       		.byte	0x1
 1090 03a8 1D       		.byte	0x1d
 1091 03a9 97000000 		.4byte	0x97
 1092 03ad 05       		.uleb128 0x5
 1093 03ae 03       		.byte	0x3
 1094 03af 00000000 		.4byte	prev_state
 1095 03b3 0F       		.uleb128 0xf
 1096 03b4 9F030000 		.4byte	.LASF45
 1097 03b8 01       		.byte	0x1
 1098 03b9 1E       		.byte	0x1e
 1099 03ba F0000000 		.4byte	0xf0
 1100 03be 05       		.uleb128 0x5
 1101 03bf 03       		.byte	0x3
 1102 03c0 00000000 		.4byte	counter_button
 1103 03c4 0F       		.uleb128 0xf
 1104 03c5 5D020000 		.4byte	.LASF46
 1105 03c9 01       		.byte	0x1
 1106 03ca 20       		.byte	0x20
 1107 03cb A2000000 		.4byte	0xa2
 1108 03cf 05       		.uleb128 0x5
 1109 03d0 03       		.byte	0x3
 1110 03d1 00000000 		.4byte	timer_counter
 1111 03d5 10       		.uleb128 0x10
 1112 03d6 D1000000 		.4byte	0xd1
 1113 03da E5030000 		.4byte	0x3e5
 1114 03de 11       		.uleb128 0x11
 1115 03df DF000000 		.4byte	0xdf
 1116 03e3 31       		.byte	0x31
 1117 03e4 00       		.byte	0
 1118 03e5 12       		.uleb128 0x12
 1119 03e6 6D657800 		.ascii	"mex\000"
 1120 03ea 01       		.byte	0x1
 1121 03eb 24       		.byte	0x24
 1122 03ec D5030000 		.4byte	0x3d5
 1123 03f0 05       		.uleb128 0x5
 1124 03f1 03       		.byte	0x3
 1125 03f2 00000000 		.4byte	mex
 1126 03f6 13       		.uleb128 0x13
 1127 03f7 16030000 		.4byte	.LASF47
 1128 03fb 16030000 		.4byte	.LASF47
 1129 03ff 07       		.byte	0x7
 1130 0400 1E       		.byte	0x1e
 1131 0401 13       		.uleb128 0x13
 1132 0402 48020000 		.4byte	.LASF48
 1133 0406 48020000 		.4byte	.LASF48
 1134 040a 08       		.byte	0x8
 1135 040b 8B       		.byte	0x8b
 1136 040c 13       		.uleb128 0x13
 1137 040d BA000000 		.4byte	.LASF49
 1138 0411 BA000000 		.4byte	.LASF49
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 26


 1139 0415 09       		.byte	0x9
 1140 0416 5E       		.byte	0x5e
 1141 0417 13       		.uleb128 0x13
 1142 0418 C7020000 		.4byte	.LASF50
 1143 041c C7020000 		.4byte	.LASF50
 1144 0420 0A       		.byte	0xa
 1145 0421 29       		.byte	0x29
 1146 0422 13       		.uleb128 0x13
 1147 0423 C8030000 		.4byte	.LASF51
 1148 0427 C8030000 		.4byte	.LASF51
 1149 042b 0A       		.byte	0xa
 1150 042c 26       		.byte	0x26
 1151 042d 13       		.uleb128 0x13
 1152 042e 76020000 		.4byte	.LASF52
 1153 0432 76020000 		.4byte	.LASF52
 1154 0436 0B       		.byte	0xb
 1155 0437 29       		.byte	0x29
 1156 0438 13       		.uleb128 0x13
 1157 0439 5F030000 		.4byte	.LASF53
 1158 043d 5F030000 		.4byte	.LASF53
 1159 0441 0B       		.byte	0xb
 1160 0442 26       		.byte	0x26
 1161 0443 13       		.uleb128 0x13
 1162 0444 16010000 		.4byte	.LASF54
 1163 0448 16010000 		.4byte	.LASF54
 1164 044c 0C       		.byte	0xc
 1165 044d 29       		.byte	0x29
 1166 044e 13       		.uleb128 0x13
 1167 044f A2000000 		.4byte	.LASF55
 1168 0453 A2000000 		.4byte	.LASF55
 1169 0457 0C       		.byte	0xc
 1170 0458 26       		.byte	0x26
 1171 0459 13       		.uleb128 0x13
 1172 045a D5010000 		.4byte	.LASF56
 1173 045e D5010000 		.4byte	.LASF56
 1174 0462 0D       		.byte	0xd
 1175 0463 5E       		.byte	0x5e
 1176 0464 00       		.byte	0
 1177              		.section	.debug_abbrev,"",%progbits
 1178              	.Ldebug_abbrev0:
 1179 0000 01       		.uleb128 0x1
 1180 0001 11       		.uleb128 0x11
 1181 0002 01       		.byte	0x1
 1182 0003 25       		.uleb128 0x25
 1183 0004 0E       		.uleb128 0xe
 1184 0005 13       		.uleb128 0x13
 1185 0006 0B       		.uleb128 0xb
 1186 0007 03       		.uleb128 0x3
 1187 0008 0E       		.uleb128 0xe
 1188 0009 1B       		.uleb128 0x1b
 1189 000a 0E       		.uleb128 0xe
 1190 000b 55       		.uleb128 0x55
 1191 000c 17       		.uleb128 0x17
 1192 000d 11       		.uleb128 0x11
 1193 000e 01       		.uleb128 0x1
 1194 000f 10       		.uleb128 0x10
 1195 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 27


 1196 0011 00       		.byte	0
 1197 0012 00       		.byte	0
 1198 0013 02       		.uleb128 0x2
 1199 0014 24       		.uleb128 0x24
 1200 0015 00       		.byte	0
 1201 0016 0B       		.uleb128 0xb
 1202 0017 0B       		.uleb128 0xb
 1203 0018 3E       		.uleb128 0x3e
 1204 0019 0B       		.uleb128 0xb
 1205 001a 03       		.uleb128 0x3
 1206 001b 0E       		.uleb128 0xe
 1207 001c 00       		.byte	0
 1208 001d 00       		.byte	0
 1209 001e 03       		.uleb128 0x3
 1210 001f 16       		.uleb128 0x16
 1211 0020 00       		.byte	0
 1212 0021 03       		.uleb128 0x3
 1213 0022 0E       		.uleb128 0xe
 1214 0023 3A       		.uleb128 0x3a
 1215 0024 0B       		.uleb128 0xb
 1216 0025 3B       		.uleb128 0x3b
 1217 0026 0B       		.uleb128 0xb
 1218 0027 49       		.uleb128 0x49
 1219 0028 13       		.uleb128 0x13
 1220 0029 00       		.byte	0
 1221 002a 00       		.byte	0
 1222 002b 04       		.uleb128 0x4
 1223 002c 24       		.uleb128 0x24
 1224 002d 00       		.byte	0
 1225 002e 0B       		.uleb128 0xb
 1226 002f 0B       		.uleb128 0xb
 1227 0030 3E       		.uleb128 0x3e
 1228 0031 0B       		.uleb128 0xb
 1229 0032 03       		.uleb128 0x3
 1230 0033 08       		.uleb128 0x8
 1231 0034 00       		.byte	0
 1232 0035 00       		.byte	0
 1233 0036 05       		.uleb128 0x5
 1234 0037 35       		.uleb128 0x35
 1235 0038 00       		.byte	0
 1236 0039 49       		.uleb128 0x49
 1237 003a 13       		.uleb128 0x13
 1238 003b 00       		.byte	0
 1239 003c 00       		.byte	0
 1240 003d 06       		.uleb128 0x6
 1241 003e 04       		.uleb128 0x4
 1242 003f 01       		.byte	0x1
 1243 0040 0B       		.uleb128 0xb
 1244 0041 0B       		.uleb128 0xb
 1245 0042 49       		.uleb128 0x49
 1246 0043 13       		.uleb128 0x13
 1247 0044 3A       		.uleb128 0x3a
 1248 0045 0B       		.uleb128 0xb
 1249 0046 3B       		.uleb128 0x3b
 1250 0047 0B       		.uleb128 0xb
 1251 0048 01       		.uleb128 0x1
 1252 0049 13       		.uleb128 0x13
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 28


 1253 004a 00       		.byte	0
 1254 004b 00       		.byte	0
 1255 004c 07       		.uleb128 0x7
 1256 004d 28       		.uleb128 0x28
 1257 004e 00       		.byte	0
 1258 004f 03       		.uleb128 0x3
 1259 0050 0E       		.uleb128 0xe
 1260 0051 1C       		.uleb128 0x1c
 1261 0052 0B       		.uleb128 0xb
 1262 0053 00       		.byte	0
 1263 0054 00       		.byte	0
 1264 0055 08       		.uleb128 0x8
 1265 0056 2E       		.uleb128 0x2e
 1266 0057 01       		.byte	0x1
 1267 0058 3F       		.uleb128 0x3f
 1268 0059 19       		.uleb128 0x19
 1269 005a 03       		.uleb128 0x3
 1270 005b 0E       		.uleb128 0xe
 1271 005c 3A       		.uleb128 0x3a
 1272 005d 0B       		.uleb128 0xb
 1273 005e 3B       		.uleb128 0x3b
 1274 005f 0B       		.uleb128 0xb
 1275 0060 27       		.uleb128 0x27
 1276 0061 19       		.uleb128 0x19
 1277 0062 11       		.uleb128 0x11
 1278 0063 01       		.uleb128 0x1
 1279 0064 12       		.uleb128 0x12
 1280 0065 06       		.uleb128 0x6
 1281 0066 40       		.uleb128 0x40
 1282 0067 18       		.uleb128 0x18
 1283 0068 9742     		.uleb128 0x2117
 1284 006a 19       		.uleb128 0x19
 1285 006b 01       		.uleb128 0x1
 1286 006c 13       		.uleb128 0x13
 1287 006d 00       		.byte	0
 1288 006e 00       		.byte	0
 1289 006f 09       		.uleb128 0x9
 1290 0070 898201   		.uleb128 0x4109
 1291 0073 01       		.byte	0x1
 1292 0074 11       		.uleb128 0x11
 1293 0075 01       		.uleb128 0x1
 1294 0076 31       		.uleb128 0x31
 1295 0077 13       		.uleb128 0x13
 1296 0078 01       		.uleb128 0x1
 1297 0079 13       		.uleb128 0x13
 1298 007a 00       		.byte	0
 1299 007b 00       		.byte	0
 1300 007c 0A       		.uleb128 0xa
 1301 007d 8A8201   		.uleb128 0x410a
 1302 0080 00       		.byte	0
 1303 0081 02       		.uleb128 0x2
 1304 0082 18       		.uleb128 0x18
 1305 0083 9142     		.uleb128 0x2111
 1306 0085 18       		.uleb128 0x18
 1307 0086 00       		.byte	0
 1308 0087 00       		.byte	0
 1309 0088 0B       		.uleb128 0xb
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 29


 1310 0089 898201   		.uleb128 0x4109
 1311 008c 01       		.byte	0x1
 1312 008d 11       		.uleb128 0x11
 1313 008e 01       		.uleb128 0x1
 1314 008f 31       		.uleb128 0x31
 1315 0090 13       		.uleb128 0x13
 1316 0091 00       		.byte	0
 1317 0092 00       		.byte	0
 1318 0093 0C       		.uleb128 0xc
 1319 0094 898201   		.uleb128 0x4109
 1320 0097 00       		.byte	0
 1321 0098 11       		.uleb128 0x11
 1322 0099 01       		.uleb128 0x1
 1323 009a 31       		.uleb128 0x31
 1324 009b 13       		.uleb128 0x13
 1325 009c 00       		.byte	0
 1326 009d 00       		.byte	0
 1327 009e 0D       		.uleb128 0xd
 1328 009f 2E       		.uleb128 0x2e
 1329 00a0 01       		.byte	0x1
 1330 00a1 3F       		.uleb128 0x3f
 1331 00a2 19       		.uleb128 0x19
 1332 00a3 03       		.uleb128 0x3
 1333 00a4 0E       		.uleb128 0xe
 1334 00a5 3A       		.uleb128 0x3a
 1335 00a6 0B       		.uleb128 0xb
 1336 00a7 3B       		.uleb128 0x3b
 1337 00a8 05       		.uleb128 0x5
 1338 00a9 27       		.uleb128 0x27
 1339 00aa 19       		.uleb128 0x19
 1340 00ab 11       		.uleb128 0x11
 1341 00ac 01       		.uleb128 0x1
 1342 00ad 12       		.uleb128 0x12
 1343 00ae 06       		.uleb128 0x6
 1344 00af 40       		.uleb128 0x40
 1345 00b0 18       		.uleb128 0x18
 1346 00b1 9742     		.uleb128 0x2117
 1347 00b3 19       		.uleb128 0x19
 1348 00b4 01       		.uleb128 0x1
 1349 00b5 13       		.uleb128 0x13
 1350 00b6 00       		.byte	0
 1351 00b7 00       		.byte	0
 1352 00b8 0E       		.uleb128 0xe
 1353 00b9 34       		.uleb128 0x34
 1354 00ba 00       		.byte	0
 1355 00bb 03       		.uleb128 0x3
 1356 00bc 0E       		.uleb128 0xe
 1357 00bd 3A       		.uleb128 0x3a
 1358 00be 0B       		.uleb128 0xb
 1359 00bf 3B       		.uleb128 0x3b
 1360 00c0 05       		.uleb128 0x5
 1361 00c1 49       		.uleb128 0x49
 1362 00c2 13       		.uleb128 0x13
 1363 00c3 3F       		.uleb128 0x3f
 1364 00c4 19       		.uleb128 0x19
 1365 00c5 3C       		.uleb128 0x3c
 1366 00c6 19       		.uleb128 0x19
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 30


 1367 00c7 00       		.byte	0
 1368 00c8 00       		.byte	0
 1369 00c9 0F       		.uleb128 0xf
 1370 00ca 34       		.uleb128 0x34
 1371 00cb 00       		.byte	0
 1372 00cc 03       		.uleb128 0x3
 1373 00cd 0E       		.uleb128 0xe
 1374 00ce 3A       		.uleb128 0x3a
 1375 00cf 0B       		.uleb128 0xb
 1376 00d0 3B       		.uleb128 0x3b
 1377 00d1 0B       		.uleb128 0xb
 1378 00d2 49       		.uleb128 0x49
 1379 00d3 13       		.uleb128 0x13
 1380 00d4 3F       		.uleb128 0x3f
 1381 00d5 19       		.uleb128 0x19
 1382 00d6 02       		.uleb128 0x2
 1383 00d7 18       		.uleb128 0x18
 1384 00d8 00       		.byte	0
 1385 00d9 00       		.byte	0
 1386 00da 10       		.uleb128 0x10
 1387 00db 01       		.uleb128 0x1
 1388 00dc 01       		.byte	0x1
 1389 00dd 49       		.uleb128 0x49
 1390 00de 13       		.uleb128 0x13
 1391 00df 01       		.uleb128 0x1
 1392 00e0 13       		.uleb128 0x13
 1393 00e1 00       		.byte	0
 1394 00e2 00       		.byte	0
 1395 00e3 11       		.uleb128 0x11
 1396 00e4 21       		.uleb128 0x21
 1397 00e5 00       		.byte	0
 1398 00e6 49       		.uleb128 0x49
 1399 00e7 13       		.uleb128 0x13
 1400 00e8 2F       		.uleb128 0x2f
 1401 00e9 0B       		.uleb128 0xb
 1402 00ea 00       		.byte	0
 1403 00eb 00       		.byte	0
 1404 00ec 12       		.uleb128 0x12
 1405 00ed 34       		.uleb128 0x34
 1406 00ee 00       		.byte	0
 1407 00ef 03       		.uleb128 0x3
 1408 00f0 08       		.uleb128 0x8
 1409 00f1 3A       		.uleb128 0x3a
 1410 00f2 0B       		.uleb128 0xb
 1411 00f3 3B       		.uleb128 0x3b
 1412 00f4 0B       		.uleb128 0xb
 1413 00f5 49       		.uleb128 0x49
 1414 00f6 13       		.uleb128 0x13
 1415 00f7 3F       		.uleb128 0x3f
 1416 00f8 19       		.uleb128 0x19
 1417 00f9 02       		.uleb128 0x2
 1418 00fa 18       		.uleb128 0x18
 1419 00fb 00       		.byte	0
 1420 00fc 00       		.byte	0
 1421 00fd 13       		.uleb128 0x13
 1422 00fe 2E       		.uleb128 0x2e
 1423 00ff 00       		.byte	0
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 31


 1424 0100 3F       		.uleb128 0x3f
 1425 0101 19       		.uleb128 0x19
 1426 0102 3C       		.uleb128 0x3c
 1427 0103 19       		.uleb128 0x19
 1428 0104 6E       		.uleb128 0x6e
 1429 0105 0E       		.uleb128 0xe
 1430 0106 03       		.uleb128 0x3
 1431 0107 0E       		.uleb128 0xe
 1432 0108 3A       		.uleb128 0x3a
 1433 0109 0B       		.uleb128 0xb
 1434 010a 3B       		.uleb128 0x3b
 1435 010b 0B       		.uleb128 0xb
 1436 010c 00       		.byte	0
 1437 010d 00       		.byte	0
 1438 010e 00       		.byte	0
 1439              		.section	.debug_aranges,"",%progbits
 1440 0000 2C000000 		.4byte	0x2c
 1441 0004 0200     		.2byte	0x2
 1442 0006 00000000 		.4byte	.Ldebug_info0
 1443 000a 04       		.byte	0x4
 1444 000b 00       		.byte	0
 1445 000c 0000     		.2byte	0
 1446 000e 0000     		.2byte	0
 1447 0010 00000000 		.4byte	.LFB64
 1448 0014 60000000 		.4byte	.LFE64-.LFB64
 1449 0018 00000000 		.4byte	.LFB65
 1450 001c B4020000 		.4byte	.LFE65-.LFB65
 1451 0020 00000000 		.4byte	.LFB66
 1452 0024 38000000 		.4byte	.LFE66-.LFB66
 1453 0028 00000000 		.4byte	0
 1454 002c 00000000 		.4byte	0
 1455              		.section	.debug_ranges,"",%progbits
 1456              	.Ldebug_ranges0:
 1457 0000 00000000 		.4byte	.LFB64
 1458 0004 60000000 		.4byte	.LFE64
 1459 0008 00000000 		.4byte	.LFB65
 1460 000c B4020000 		.4byte	.LFE65
 1461 0010 00000000 		.4byte	.LFB66
 1462 0014 38000000 		.4byte	.LFE66
 1463 0018 00000000 		.4byte	0
 1464 001c 00000000 		.4byte	0
 1465              		.section	.debug_line,"",%progbits
 1466              	.Ldebug_line0:
 1467 0000 72020000 		.section	.debug_str,"MS",%progbits,1
 1467      0200DF01 
 1467      00000201 
 1467      FB0E0D00 
 1467      01010101 
 1468              	.LASF36:
 1469 0000 636F756E 		.ascii	"counter_green\000"
 1469      7465725F 
 1469      67726565 
 1469      6E00
 1470              	.LASF40:
 1471 000e 74696D65 		.ascii	"timestamp\000"
 1471      7374616D 
 1471      7000
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 32


 1472              	.LASF58:
 1473 0018 496E7465 		.ascii	"Interrupt_Routines.c\000"
 1473      72727570 
 1473      745F526F 
 1473      7574696E 
 1473      65732E63 
 1474              	.LASF3:
 1475 002d 5F5F7569 		.ascii	"__uint8_t\000"
 1475      6E74385F 
 1475      7400
 1476              	.LASF59:
 1477 0037 433A5C55 		.ascii	"C:\\Users\\Riccardo\\Desktop\\Final Project\\Final_"
 1477      73657273 
 1477      5C526963 
 1477      63617264 
 1477      6F5C4465 
 1478 0065 50726F6A 		.ascii	"Project\\Final_Project.cydsn\000"
 1478      6563745C 
 1478      46696E61 
 1478      6C5F5072 
 1478      6F6A6563 
 1479              	.LASF30:
 1480 0081 73746174 		.ascii	"status\000"
 1480      757300
 1481              	.LASF34:
 1482 0088 70657269 		.ascii	"period_int_led\000"
 1482      6F645F69 
 1482      6E745F6C 
 1482      656400
 1483              	.LASF31:
 1484 0097 70657269 		.ascii	"period_red\000"
 1484      6F645F72 
 1484      656400
 1485              	.LASF55:
 1486 00a2 5245445F 		.ascii	"RED_Led_Write\000"
 1486      4C65645F 
 1486      57726974 
 1486      6500
 1487              	.LASF6:
 1488 00b0 5F5F696E 		.ascii	"__int32_t\000"
 1488      7433325F 
 1488      7400
 1489              	.LASF49:
 1490 00ba 54696D65 		.ascii	"Timer_ReadStatusRegister\000"
 1490      725F5265 
 1490      61645374 
 1490      61747573 
 1490      52656769 
 1491              	.LASF5:
 1492 00d3 73686F72 		.ascii	"short unsigned int\000"
 1492      7420756E 
 1492      7369676E 
 1492      65642069 
 1492      6E7400
 1493              	.LASF13:
 1494 00e6 75696E74 		.ascii	"uint8_t\000"
 1494      385F7400 
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 33


 1495              	.LASF24:
 1496 00ee 4572726F 		.ascii	"ErrorCode\000"
 1496      72436F64 
 1496      6500
 1497              	.LASF18:
 1498 00f8 646F7562 		.ascii	"double\000"
 1498      6C6500
 1499              	.LASF42:
 1500 00ff 77617465 		.ascii	"watermark\000"
 1500      726D6172 
 1500      6B00
 1501              	.LASF37:
 1502 0109 636F756E 		.ascii	"counter_blue\000"
 1502      7465725F 
 1502      626C7565 
 1502      00
 1503              	.LASF54:
 1504 0116 5245445F 		.ascii	"RED_Led_Read\000"
 1504      4C65645F 
 1504      52656164 
 1504      00
 1505              	.LASF17:
 1506 0123 666C6F61 		.ascii	"float\000"
 1506      7400
 1507              	.LASF38:
 1508 0129 636F756E 		.ascii	"counter_int_led\000"
 1508      7465725F 
 1508      696E745F 
 1508      6C656400 
 1509              	.LASF1:
 1510 0139 756E7369 		.ascii	"unsigned char\000"
 1510      676E6564 
 1510      20636861 
 1510      7200
 1511              	.LASF57:
 1512 0147 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1512      43313120 
 1512      352E342E 
 1512      31203230 
 1512      31363036 
 1513 017a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1513      20726576 
 1513      6973696F 
 1513      6E203233 
 1513      37373135 
 1514 01ad 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1514      66756E63 
 1514      74696F6E 
 1514      2D736563 
 1514      74696F6E 
 1515              	.LASF56:
 1516 01d5 54696D65 		.ascii	"Timer_Button_ReadStatusRegister\000"
 1516      725F4275 
 1516      74746F6E 
 1516      5F526561 
 1516      64537461 
 1517              	.LASF27:
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 34


 1518 01f5 4953525F 		.ascii	"ISR_COUNTER_BUTTON\000"
 1518      434F554E 
 1518      5445525F 
 1518      42555454 
 1518      4F4E00
 1519              	.LASF29:
 1520 0208 4F56525F 		.ascii	"OVR_FLAG\000"
 1520      464C4147 
 1520      00
 1521              	.LASF33:
 1522 0211 70657269 		.ascii	"period_blue\000"
 1522      6F645F62 
 1522      6C756500 
 1523              	.LASF7:
 1524 021d 6C6F6E67 		.ascii	"long int\000"
 1524      20696E74 
 1524      00
 1525              	.LASF28:
 1526 0226 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1526      52784275 
 1526      66666572 
 1526      00
 1527              	.LASF4:
 1528 0233 5F5F7569 		.ascii	"__uint16_t\000"
 1528      6E743136 
 1528      5F7400
 1529              	.LASF26:
 1530 023e 4953525F 		.ascii	"ISR_TIMER\000"
 1530      54494D45 
 1530      5200
 1531              	.LASF48:
 1532 0248 55415254 		.ascii	"UART_Debug_PutString\000"
 1532      5F446562 
 1532      75675F50 
 1532      75745374 
 1532      72696E67 
 1533              	.LASF46:
 1534 025d 74696D65 		.ascii	"timer_counter\000"
 1534      725F636F 
 1534      756E7465 
 1534      7200
 1535              	.LASF8:
 1536 026b 5F5F7569 		.ascii	"__uint32_t\000"
 1536      6E743332 
 1536      5F7400
 1537              	.LASF52:
 1538 0276 47524545 		.ascii	"GREEN_Led_Read\000"
 1538      4E5F4C65 
 1538      645F5265 
 1538      616400
 1539              	.LASF9:
 1540 0285 6C6F6E67 		.ascii	"long unsigned int\000"
 1540      20756E73 
 1540      69676E65 
 1540      6420696E 
 1540      7400
 1541              	.LASF12:
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 35


 1542 0297 756E7369 		.ascii	"unsigned int\000"
 1542      676E6564 
 1542      20696E74 
 1542      00
 1543              	.LASF11:
 1544 02a4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1544      206C6F6E 
 1544      6720756E 
 1544      7369676E 
 1544      65642069 
 1545              	.LASF35:
 1546 02bb 636F756E 		.ascii	"counter_red\000"
 1546      7465725F 
 1546      72656400 
 1547              	.LASF50:
 1548 02c7 424C5545 		.ascii	"BLUE_Led_Read\000"
 1548      5F4C6564 
 1548      5F526561 
 1548      6400
 1549              	.LASF44:
 1550 02d5 70726576 		.ascii	"prev_state\000"
 1550      5F737461 
 1550      746500
 1551              	.LASF39:
 1552 02e0 666C6167 		.ascii	"flag_eeprom\000"
 1552      5F656570 
 1552      726F6D00 
 1553              	.LASF15:
 1554 02ec 696E7433 		.ascii	"int32_t\000"
 1554      325F7400 
 1555              	.LASF21:
 1556 02f4 73697A65 		.ascii	"sizetype\000"
 1556      74797065 
 1556      00
 1557              	.LASF41:
 1558 02fd 6572726F 		.ascii	"error\000"
 1558      7200
 1559              	.LASF10:
 1560 0303 6C6F6E67 		.ascii	"long long int\000"
 1560      206C6F6E 
 1560      6720696E 
 1560      7400
 1561              	.LASF19:
 1562 0311 63686172 		.ascii	"char\000"
 1562      00
 1563              	.LASF47:
 1564 0316 4932435F 		.ascii	"I2C_Peripheral_ReadRegister\000"
 1564      50657269 
 1564      70686572 
 1564      616C5F52 
 1564      65616452 
 1565              	.LASF25:
 1566 0332 4953525F 		.ascii	"ISR_LIS3DH_FIFO_WATERMARK\000"
 1566      4C495333 
 1566      44485F46 
 1566      49464F5F 
 1566      57415445 
ARM GAS  C:\Users\Riccardo\AppData\Local\Temp\ccDsqBdl.s 			page 36


 1567              	.LASF2:
 1568 034c 73686F72 		.ascii	"short int\000"
 1568      7420696E 
 1568      7400
 1569              	.LASF14:
 1570 0356 75696E74 		.ascii	"uint16_t\000"
 1570      31365F74 
 1570      00
 1571              	.LASF53:
 1572 035f 47524545 		.ascii	"GREEN_Led_Write\000"
 1572      4E5F4C65 
 1572      645F5772 
 1572      69746500 
 1573              	.LASF22:
 1574 036f 4E4F5F45 		.ascii	"NO_ERROR\000"
 1574      52524F52 
 1574      00
 1575              	.LASF16:
 1576 0378 75696E74 		.ascii	"uint32_t\000"
 1576      33325F74 
 1576      00
 1577              	.LASF23:
 1578 0381 4552524F 		.ascii	"ERROR\000"
 1578      5200
 1579              	.LASF20:
 1580 0387 6C6F6E67 		.ascii	"long double\000"
 1580      20646F75 
 1580      626C6500 
 1581              	.LASF0:
 1582 0393 7369676E 		.ascii	"signed char\000"
 1582      65642063 
 1582      68617200 
 1583              	.LASF45:
 1584 039f 636F756E 		.ascii	"counter_button\000"
 1584      7465725F 
 1584      62757474 
 1584      6F6E00
 1585              	.LASF43:
 1586 03ae 696E7431 		.ascii	"int1_src_reg\000"
 1586      5F737263 
 1586      5F726567 
 1586      00
 1587              	.LASF32:
 1588 03bb 70657269 		.ascii	"period_green\000"
 1588      6F645F67 
 1588      7265656E 
 1588      00
 1589              	.LASF51:
 1590 03c8 424C5545 		.ascii	"BLUE_Led_Write\000"
 1590      5F4C6564 
 1590      5F577269 
 1590      746500
 1591              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
